import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score
from sklearn import metrics

data=pd.read_csv('pro7.csv',names=['message','label'])
print('the dataset is ',data)
print('the dimensions of the dataset',data.shape)
data['labelnum']=data.label.map({'pos':1,'neg':0})
x=data.message
y=data.labelnum
print(x)
print(y)

vectorizer = TfidfVectorizer()
data = vectorizer.fit_transform(x)
print('\n the features of dataset : \n')
df=pd.DataFrame(data.toarray(),columns=vectorizer.get_feature_names_out())
df.head()

print('\n train test split')
xtrain,xtest,ytrain,ytest = train_test_split(data,y,test_size=0.3,random_state=42)
print('\n the total number of traning data : ',ytrain.shape)
print('\n the total number of test data : ',ytest.shape)
clf=MultinomialNB().fit(xtrain,ytrain)
predict=clf.predict(xtest)
predicted=clf.predict(xtest)

print('\n Accuracy of the classifier is ',metrics.accuracy_score(ytest,predicted))
print('\n Confusion Matrix is \n ',metrics.confusion_matrix(ytest,predicted))
print('\n classification report is \n ',metrics.classification_report(ytest,predicted))
print('\n value of precision is \n',metrics.precision_score(ytest,predicted))
print('\n value of recall is \n ',metrics.recall_score(ytest,predicted))